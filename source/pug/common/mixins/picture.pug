//-
  Генерирует picture обертку с img картинкой для разных разрешений экрана и ретиной.
  @param {string} picClass - Класс тега picture. Передается в кавычках.
  @param {string} imgClass - Класс тега img. Передается в кавычках.
  @param {string} name - Наименование файла. Передается в кавычках.
  @param {string} extensions - Массив расширений файлов.
  @param {number} width - Ширина изображения.
  @param {number} height - Высота изображения.
  @param {string} alt - Описание изображения в теге img. Передается в кавычках.
mixin picture(picClass, imgClass, name, extensions, width, height, alt)
  picture(class=picClass)
    each size, i in media
      source(
        type='image/webp'
        media=i < media.length-1 ? `(min-width: ${size.resolution}px)` : null
        srcset=`${path.images}${name}-${size.name}@2x.webp 2x,
          ${path.images}${name}-${size.name}@1x.webp 1x`
      )
    each size, i in media
      if (i < media.length-1)
        source(
          type=`image/${extensions[i] === 'jpg' ? 'jpeg' : extensions[i]}`
          media=i < media.length-1 ? `(min-width: ${size.resolution}px)` : null
          srcset=`${path.images}${name}-${size.name}@2x.${extensions[i]} 2x,
          ${path.images}${name}-${size.name}@1x.${extensions[i]} 1x`
        )
      else
        img(
          class=imgClass
          srcset=`${path.images}${name}-${size.name}@2x.${extensions[i]} 2x`
          src=`${path.images}${name}-${size.name}@1x.${extensions[i]}`
          width=width height=height alt=alt
        )
